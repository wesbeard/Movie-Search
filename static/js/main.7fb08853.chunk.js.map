{"version":3,"sources":["store/movie-data-store.tsx","components/SearchMovie.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["useMovieStore","create","set","movieData","undefined","fetchMovies","title","a","fetch","response","json","console","log","SearchMovie","state","imdbLink","imdbID","useEffect","Error","className","alt","src","Poster","Title","Genre","Released","Director","Actors","Writer","Plot","href","rel","target","App","document","useState","textInput","setTextInput","movieTitle","setMovieTitle","handleClick","type","onChange","e","currentTarget","value","onKeyPress","event","key","placeholder","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.7fb08853.chunk.js","sourcesContent":["import create from 'zustand'\r\n\r\nconst API_KEY = '9571ec5f'\r\n\r\ntype IMovieResponse = {\r\n    Title: String;\r\n    Actors: String;\r\n    Director: String;\r\n    Genre: String;\r\n    Plot: String;\r\n    Poster: string;\r\n    imdbID: String;\r\n    Released: String;\r\n    Writer: String;\r\n    Error: String;\r\n}\r\n\r\ntype IUseMovieStore = {\r\n    movieData: IMovieResponse | undefined,\r\n    fetchMovies: (title: String) => Promise<void>;\r\n}\r\n\r\nconst useMovieStore = create<IUseMovieStore>((set) => ({\r\n    movieData: undefined,\r\n\r\n    fetchMovies: async (title) => {\r\n        const response = await fetch(`http://www.omdbapi.com/?t=${title}&apikey=${API_KEY}`);\r\n        const json = await response.json();\r\n        console.log(json);\r\n\r\n        if (response) {\r\n            set({movieData: json});\r\n        }\r\n    },\r\n}))\r\n\r\nexport default useMovieStore;","import React, { useEffect } from 'react';\r\nimport useMovieStore from '../store/movie-data-store';\r\n\r\ninterface ISearchMovieProps {\r\n  title: String;\r\n}\r\n\r\nconst SearchMovie: React.FunctionComponent<ISearchMovieProps> = ({title}) => {\r\n\r\n  const fetchMovies = useMovieStore(state => state.fetchMovies);\r\n  const state = useMovieStore();\r\n  \r\n  let imdbLink = \"https://www.imdb.com/title/\" + state.movieData?.imdbID;\r\n\r\n  useEffect(() => {\r\n  \r\n    fetchMovies(title);\r\n   \r\n  }, [title, fetchMovies]);\r\n      \r\n  if (title !== \"\" && state.movieData?.Error !== \"Movie not found!\")\r\n  {\r\n    return (\r\n      <div className=\"Movie\">\r\n        <div className=\"Poster\">\r\n          <img alt=\"Poster\" src={state.movieData?.Poster}/>\r\n        </div>\r\n      <div className=\"Movie-details\">\r\n\r\n        <h1><i className=\"fas fa-film\"/> {state.movieData?.Title}</h1>\r\n\r\n        <p><i className=\"fas fa-scroll\"/> {state.movieData?.Genre}</p>\r\n        <p><i className=\"fas fa-calendar-day\"/> Released {state.movieData?.Released}</p>\r\n        <p><i className=\"fas fa-user\"/> Directed by {state.movieData?.Director}</p>\r\n\r\n        <hr/>\r\n        <h2><i className=\"fas fa-users\"/> Cast: </h2>\r\n        <p>{state.movieData?.Actors}</p>\r\n\r\n        <hr/>\r\n        <h2><i className=\"fas fa-pen-alt\"/> Written by: </h2>\r\n        <p>{state.movieData?.Writer}</p>\r\n\r\n        <hr/>\r\n        <h2><i className=\"fas fa-file-alt\"/> Plot Synopsis:</h2>\r\n        <p> {state.movieData?.Plot}</p>\r\n\r\n        <hr/>\r\n        <div className=\"imdb\">\r\n          <p>See more on </p> <a href={imdbLink} rel=\"noreferrer\" target=\"_blank\"><i className=\"fab fa-imdb fa-3x\"/></a>\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n    );\r\n  }\r\n  else if (state.movieData?.Error === \"Movie not found!\") {\r\n    return(\r\n      <div>\r\n        <h1><i className=\"far fa-question-circle\"/> Whoops! We couldn't find that title!</h1>\r\n      </div>\r\n    );\r\n  }\r\n  else {\r\n    return(null);\r\n  }\r\n}\r\n\r\nexport default SearchMovie;","import React, { useState } from 'react';\nimport './App.css';\nimport SearchMovie from './components/SearchMovie'\n\nfunction App() {\n\n  document.title = \"Movie Search\";\n\n  const [textInput, setTextInput] = useState(\"\");\n  const [movieTitle, setMovieTitle] = useState(\"\");\n\n  const handleTextInput = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setTextInput(e.currentTarget.value);\n  }\n\n  const handleClick = () => {\n    if (textInput !==  \"\") {\n      setMovieTitle(textInput);\n      setTextInput(\"\");\n    }\n  }\n\n  const handleKeyPress = (event: React.KeyboardEvent) => {\n    if(event.key === 'Enter'){\n      handleClick();\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"Search\">\n        <input type=\"text\" className=\"Search-box\" onChange={handleTextInput} onKeyPress={handleKeyPress} value={textInput} placeholder=\"Enter a movie title...\"/><button className=\"Search-button\" onClick={handleClick}><i className=\"fas fa-search\"></i>  Search</button>\n      </div>\n      <div className=\"Info\">\n        <SearchMovie title={movieTitle}/>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}